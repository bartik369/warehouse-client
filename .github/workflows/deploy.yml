name: Deploy Frontend

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v3

      - name: Установка зависимостей и сборка фронтенда
        run: |
          cd frontend
          npm ci
          npm run build
          cd ..

      - name: Архивирование (исключая node_modules)
        run: |
          cd frontend
          tar --exclude='node_modules' --warning=no-file-changed -czf ../frontend.tar.gz .
          cd ..

      - name: Запись .env локально
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Копирование .env на сервер
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          source: ".env"
          target: "/srv/apps/frontend/"

      - name: Копирование архива проекта на сервер
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          source: "frontend.tar.gz"
          target: "/srv/apps/"

      - name: Деплой на сервер через SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          script: |
            echo "===> Переключаемся в директорию проекта"
            cd /srv/apps

            echo "===> Распаковываем фронтенд в папку frontend"
            rm -rf frontend
            mkdir frontend
            tar -xzf frontend.tar.gz -C frontend
            rm frontend.tar.gz

            echo "===> Перемещаем .env в нужное место"
            mv frontend/.env frontend/.env.production

            echo "===> Обновляем и перезапускаем контейнеры"
            docker compose down
            docker compose build
            docker compose up -d

            echo "===> Проверка статуса контейнеров"
            docker compose ps

            echo "===> Последние логи"
            docker compose logs --tail=100
